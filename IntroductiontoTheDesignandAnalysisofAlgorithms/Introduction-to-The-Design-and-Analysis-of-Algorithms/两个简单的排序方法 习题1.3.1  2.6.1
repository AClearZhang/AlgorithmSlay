import UIKit
func Comp(A:[Int]) -> [Int]{
    let n = A.count
    var countans = [Int]()
    var output = [Int]()
    for _ in 0...(n-1) {
        countans.append(0)
        output.append(0)
    }
    for i in 0...n-2 {
        for j in (i+1)...(n-1) {
            if A[i] < A[j]{
                countans[j] = countans[j]+1
        } else {
                countans[i] = countans[i]+1
            }
        }
    }
    print(countans)
    for i in 0...n-1 {
        output[countans[i]] = A[i]
    }
    return output
}
var input = [60,30,81,98,14,47]
Comp(input)
//output
//[14, 30, 47, 60, 81, 98]
//print countans
//[3, 1, 4, 5, 0, 2]

//
import UIKit
func SortAnalysis(A:[Int]) -> [Int]{
    var array = A
    let n = array.count
    for i in 1...n-1 {
        let temp = array[i]
        var j = i-1
        while j >= 0 && array[j] > temp{
            array[j+1] = array[j]
            j = j-1
        }
        array[j+1] = temp
    }
    return array
}
let test = SortAnalysis([4,8,2,7,3,10,9,1])
//output:   [1, 2, 3, 4, 7, 8, 9, 10]
